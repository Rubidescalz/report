<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pC6Av09B+S98sZdrxWaZnQAAAABJRU5ErkJggg==
</value>
  </data>
</root>