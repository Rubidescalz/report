name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path ${{ runner.temp }}\scanner

      - name: Build and analyze using MSBuild
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          $scannerPath = "${{ runner.temp }}\scanner\dotnet-sonarscanner"
          $msbuildPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
          $solutionPath = "ReporteGasto\ReporteGasto.sln"
          $sonarToken = "${{ secrets.SONAR_TOKEN }}"
          
          # Iniciar SonarScanner
          & $scannerPath @("begin", "/k:Rubidescalz_reportegasto", "/o:rubidescalz", "/d:sonar.token=$sonarToken")
          
          # Compilar con MSBuild
          & $msbuildPath @($solutionPath, "/p:Configuration=Release", "/p:Platform=AnyCPU", "/p:VisualStudioVersion=17.0")
          
          # Finalizar SonarScanner
          & $scannerPath @("end", "/d:sonar.token=$sonarToken")
